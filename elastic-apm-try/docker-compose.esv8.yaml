services:
  apm-server:
    image: docker.elastic.co/apm/apm-server:8.8.2
    volumes:
      - certs:/usr/share/apm-server/certs
    environment:
      - output.elasticsearch.hosts=["elasticsearch:9200"]
      # - output.elasticsearch.protocol=https
      - output.elasticsearch.username=elastic
      - output.elasticsearch.password=password
      - output.elasticsearch.ssl.enabled=true
      - output.elasticsearch.ssl.certificate_authorities=/usr/share/apm-server/certs/ca/ca.crt
      - output.elasticsearch.ssl.certificate=/usr/share/apm-server/certs/elasticsearch/elasticsearch.crt
      - output.elasticsearch.ssl.key=/usr/share/apm-server/certs/elasticsearch/elasticsearch.key
      # - apm-server.ssl.enabled=true
      # - apm-server.ssl.certificate=/usr/share/apm-server/certs/elasticsearch/elasticsearch.crt
      # - apm-server.ssl.key=/usr/share/apm-server/certs/elasticsearch/elasticsearch.key
      # - apm-server.rum.enabled=true
      # - apm-server.rum.allow_origins=["*"]
    ports:
      - 8200:8200
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://localhost:8200/healthcheck"]
      interval: 10s
      timeout: 10s
      retries: 120

  # see https://zenn.dev/fujimotoshinji/scraps/4fb4616976ee00
  # なんか apm のセットアップをするにはセキュリティ設定をする必要があり例えば HTTPS で通信する必要があるらしい
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
    user: '0'
    command: |
      bash -c '
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: elasticsearch\n"\
          "    dns:\n"\
          "      - elasticsearch\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://elasticsearch:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u elastic:password -H "Content-Type: application/json" https://elasticsearch:9200/_security/user/kibana_system/_password -d "{\"password\":\"password\"}" | grep -q "^{}"; do sleep 10; done;
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/elasticsearch/elasticsearch.crt ]"]
      interval: 1s
      timeout: 10s
      retries: 120

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - ELASTIC_PASSWORD=password
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/elasticsearch/elasticsearch.key
      - xpack.security.http.ssl.certificate=certs/elasticsearch/elasticsearch.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.http.ssl.verification_mode=certificate
      # - xpack.security.transport.ssl.enabled=true
      # - xpack.security.transport.ssl.key=certs/elasticsearch/elasticsearch.key
      # - xpack.security.transport.ssl.certificate=certs/elasticsearch/elasticsearch.crt
      # - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      # - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'"]
      interval: 10s
      timeout: 10s
      retries: 120
    depends_on:
      setup:
        condition: service_healthy

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.2
    volumes:
      - certs:/usr/share/kibana/config/certs
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=password
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    depends_on:
      elasticsearch:
        condition: service_healthy

volumes:
  certs:
    driver: local
  esdata:
    driver: local
